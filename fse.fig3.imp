#include "Primitives.imp"

void foo(int y) {
  int lock := 1; --1 means U
  int x:=randInt();
  int z:=randInt();
  int i:=randInt();
  lock :=0; --0 means L
  x:=y;
  if (z>=0) then {
    lock := 1;
    y:=y+1
  } else { void };
  while (notEq(x,y)) do {
    lock :=0;
    x:=y;
    if (z>=0) then {
      lock := 1;
      y:=y+1
    } else { void }
  };
  if (notEq(lock,0)) then { verror() }
  else { void }
}

{-
main(int argc, char** argv)
{
	int lock = 1;
	int x,y,z;
	int i;
	x = atoi(argv[1]);
	y = atoi(argv[2]);
	z = atoi(argv[3]);
	i = atoi(argv[4]);

	do
	{
		lock = 0;
		x = y;
		if (z>=	0)
		{
			lock = 1;
			y++;
		}
	}while(x!=y);

	if (lock != 0)
		error();
}

-}